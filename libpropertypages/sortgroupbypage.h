// -*- C++ -*-
//
// generated by wxGlade 0.7.2 (standalone edition) on Sat Jan 04 11:51:25 2020
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#ifndef GROUPBYPAGE_H
#define GROUPBYPAGE_H

#define ADDFIELD 0
#define REMOVEFIELD 1

class MyListCtrl : public wxListCtrl
{
public:
    MyListCtrl (wxWindow *parent, wxWindowID id, const wxPoint &pos, const wxSize &size, long style) : wxListCtrl (parent, id, pos, size, style)
    {
    }
#ifdef __WXMSW__
    virtual bool MSWOnNotify(int idCtrl, WXLPARAM lParam, WXLPARAM *result) wxOVERRIDE;
#endif
protected:
    virtual wxSize DoGetBestClientSize() const wxOVERRIDE;
};

class SortColumnRenderer
#ifndef __WXOSX__
    : public wxDataViewCustomRenderer
#else
    : public wxOSXDataViewDisabledInertRenderer
#endif
{
public:
    static wxString GetDefaultType() { return wxS("bool"); }
#ifndef __WXOSX__
    explicit SortColumnRenderer(wxCheckBoxState state = wxCHK_CHECKED, wxDataViewCellMode mode = wxDATAVIEW_CELL_ACTIVATABLE, int align = wxDVR_DEFAULT_ALIGNMENT);
#else
    explicit SortColumnRenderer(wxCheckBoxState state = wxCHK_CHECKED, wxDataViewCellMode mode = wxDATAVIEW_CELL_ACTIVATABLE, int align = wxDVR_DEFAULT_ALIGNMENT);
#endif
#ifdef __WXOSX__
    virtual bool MacRender() wxOVERRIDE;
    virtual void OSXOnCellChanged(NSObject *value, const wxDataViewItem& item, unsigned col) wxOVERRIDE;
#endif
    virtual wxString GetAccessibleDescription() const wxOVERRIDE;
    virtual bool SetValue(const wxVariant& value) wxOVERRIDE;
    virtual bool GetValue(wxVariant& value) const wxOVERRIDE;
#ifndef __WXOSX__
    virtual wxSize GetSize() const wxOVERRIDE;
    virtual bool Render(wxRect cell, wxDC* dc, int state) wxOVERRIDE;
    virtual bool ActivateCell (const wxRect& cell, wxDataViewModel *model, const wxDataViewItem & item, unsigned int col, const wxMouseEvent *mouseEvent) wxOVERRIDE;
#endif
private:
    wxSize GetCheckSize () const { return wxRendererNative::Get().GetCheckBoxSize( GetView() ); }

    enum
    {
        MARGIN_CHECK_ICON = 3
    };

    bool m_allow3rdStateForUser;
    bool m_toggle;
    wxDECLARE_DYNAMIC_CLASS_NO_COPY(SortColumnRenderer);
};

class WXEXPORT SortGroupByPage : public wxPanel
{
public:
    SortGroupByPage(wxWindow *parent, bool isSortPage);
    ~SortGroupByPage();
    wxListCtrl *GetSourceList();
    wxListCtrl *GetDestList();
    wxDataViewListCtrl *GetSortSourceList();
    wxDataViewListCtrl *GetSourceDestList();
    void AddRemoveSortingField(bool isAdding, const wxString &field);
protected:
    void set_properties();
    void do_layout();
    void FinishDragging(const wxPoint &pt);
    void OnBeginDrag(wxListEvent &event);
    void OnItemSelected(wxListEvent &event);
    void OnItemFocused(wxListEvent &event);
    void OnLeftUp(wxMouseEvent &event);
    void OnRightDown(wxMouseEvent &event);
    void OnMouseMove(wxMouseEvent &event);
    void OnMouseCaptureLost(wxMouseCaptureLostEvent &event);
    void OnSortBeginDrag(wxDataViewEvent &event);
    void OnSortDrop(wxDataViewEvent &event);
    void OnSortDropPossible(wxDataViewEvent &event);
    void OnSortSelectionChanged(wxDataViewEvent &event);
    void OnSortListStartEditing(wxDataViewEvent &event);
private:
    MyListCtrl *m_source, *m_dest, *m_dragSource, *m_dragDest;
    wxDataViewListCtrl *m_sortSource, *m_sortDest, *m_sortDragSource, *m_sortDragDest;
    wxStaticText *m_label;
    wxString m_item;
    int m_itemPos, m_sourcePos;
    bool m_isDragging, m_isSorting;
};

#endif // GROUPBYPAGE_H
