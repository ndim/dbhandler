// -*- C++ -*- generated by wxGlade 0.5 on Wed Feb 06 22:39:49 2008
/***************************************************************************
 *   Copyright (C) 2005 by Igor Korot                                      *
 *   igor@IgorsGentoo                                                      *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

#include "wx/font.h"
#include "wx/bmpcbox.h"
#ifdef __WXMSW__
#include "wx/fontenum.h"
#endif
#if defined __WXGTK__
#include "wx/nativewin.h"
#endif
#ifdef __WXOSX__
#include "wx/fontpicker.h"
#endif
#include "colorcombobox.h"
#include "propertypagebase.h"
#include "fontpropertypagebase.h"

BEGIN_EVENT_TABLE(wxFontPreviewer, wxWindow)
    EVT_PAINT(wxFontPreviewer::OnPaint)
END_EVENT_TABLE()

void wxFontPreviewer::OnPaint(wxPaintEvent& WXUNUSED(event))
{
    int cx, x, y;
    wxPaintDC dc( this );
    wxRect rcText = GetRect();
    wxPoint pos = GetPosition();
    wxSize size = GetSize(), extent;
    wxFont font = GetFont();
    ScreenToClient( pos );
    dc.SetBackgroundMode( wxBRUSHSTYLE_TRANSPARENT );
    dc.SetPen( *wxBLACK_PEN );
    dc.SetBrush( *wxWHITE_BRUSH );
    dc.DrawRectangle( 0, 0, size.x, size.y );
    if( font.IsOk() )
    {
        dc.SetFont( font );
        wxFontMetrics metrics = dc.GetFontMetrics();
        extent = dc.GetTextExtent( m_text );
        extent.SetHeight( metrics.ascent - metrics.internalLeading );
        cx = extent.GetX();
        if( ( cx >= ( size.GetWidth() ) ) || cx <= 0 )
            x = pos.x;
        else
            x = pos.x + ( size.GetWidth() - cx ) / 2;
        int bottom = size.GetY() + size.GetHeight();
        y = wxMin( bottom, bottom - ( ( bottom - pos.y ) - extent.GetHeight() ) / 2 );
        dc.SetTextForeground( *wxBLACK );
        dc.DrawText( m_text, x, y );
        dc.SetFont( wxNullFont );
    }
    dc.SetBrush( wxNullBrush );
    dc.SetPen( wxNullPen );
}

CFontPropertyPageBase::CFontPropertyPageBase(wxWindow* parent, const FontPropertyPage &font, int id, const wxPoint& pos, const wxSize& size, long style)
 : PropertyPageBase(parent, id)
{
    m_dirty = false;
    m_faceName = font.font.GetFaceName();
    m_weight = font.font.GetWeight();
    m_underline = font.font.GetUnderlined();
    m_striken = font.font.GetStrikethrough();
    m_style = font.font.GetStyle();
    m_ptSize = font.font.GetPointSize();
}

CFontPropertyPageBase::~CFontPropertyPageBase()
{
}

void CFontPropertyPageBase::SetFont(const std::wstring &name, int size, bool italic, bool bold, bool underline, bool strikethrough)
{
}

FontPropertyPage &CFontPropertyPageBase::GetFont()
{
    return m_font;
}

bool CFontPropertyPageBase::IsDirty()
{
    return m_dirty;
}

wxString &CFontPropertyPageBase::GetFaceName() const
{
    return const_cast<wxString &>( m_faceName );
}

wxFontWeight &CFontPropertyPageBase::GetWeight() const
{
    return const_cast<wxFontWeight &>( m_weight );
}

int CFontPropertyPageBase::GetPointSize() const
{
    return m_ptSize;
}

bool CFontPropertyPageBase::GetUnderline() const
{
    return m_underline;
}

bool CFontPropertyPageBase::GetStrikethrough() const
{
    return m_striken;
}

wxFontStyle CFontPropertyPageBase::GetStyle() const
{
    return m_style;
}

void CFontPropertyPageBase::SetFaceName(const wxString &name)
{
    m_faceName = name;
}
