// -*- C++ -*- generated by wxGlade 0.5 on Wed Feb 06 22:39:49 2008
/***************************************************************************
 *   Copyright (C) 2005 by Igor Korot                                      *
 *   igor@IgorsGentoo                                                      *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

#include <gtk/gtk.h>
#include "wx/font.h"
#include "wx/fontutil.h"
#include "wx/nativewin.h"
#include "fontpropertypagebase.h"
#include "wx/gtk/private.h"
/*
static void set_font(GtkWidget *widget, wxFont *font)
{
   gchar buf[1024];
   PangoFontDescription *font_description = font->GetNativeFontInfo()->description;
   wxGtkString font_string( pango_font_description_to_string( font_description ) );
   g_snprintf( buf, sizeof( buf ), "%s", font_string.c_str() );
   gtk_font_selection_set_font_name( GTK_FONT_SELECTION( widget ), buf );  
}
*/
CFontPropertyPage::CFontPropertyPage(wxWindow* parent, wxFont *font, int id, const wxPoint& pos, const wxSize& size, long style)
 : CFontPropertyPageBase(parent, font, id, pos, size, wxTAB_TRAVERSAL)
{
    m_font = font;
#if GTK_CHECK_VERSION(3, 2, 0 )
    m_fontPanel = gtk_font_chooser_widget_new();
#else
    m_fontPanel = gtk_font_selection_new();
#endif
    m_holder = new wxNativeWindow( this, wxID_ANY, m_fontPanel );
    g_object_unref( m_fontPanel );
#if GTK_CHECK_VERSION(3, 2, 0 )
    gtk_font_chooser_set_font_desc( m_fontPanel, m_font.GetNativeFontInfo().description );
#else
//    gtk_font_selection_set_font_name( m_fontPanel, );
#endif
//    g_signal_connect( m_fontPanel, "realize", G_CALLBACK( set_font ), &font );
//    wxWindowBase::AddChild( m_fontPanel );
//    m_dirtyTabOrder = true;
//    wxTheApp->WakeUpIdle();
//    wxPizza *pizza = WX_PIZZA( m_fontPanel );
//    DoAddChild( m_fontPanel );
//    PostCreation( size );
}

CFontPropertyPage::~CFontPropertyPage()
{
}
