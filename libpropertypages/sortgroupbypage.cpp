// -*- C++ -*-
//
// generated by wxGlade 0.7.2 (standalone edition) on Sat Jan 04 11:51:25 2020
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//
// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#include "wx/mdi.h"
#endif

#include "wx/listctrl.h"
#include "sortgroupbypage.h"

SortGroupByPage::SortGroupByPage(wxWindow *parent) : wxPanel( parent )
{
    m_label = new wxStaticText( this, wxID_ANY, _( "Drag and drop the columns in the order that you want them" ) );
    m_source = new wxListCtrl( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT | wxLC_SINGLE_SEL | wxLC_NO_HEADER );
    m_dest = new wxListCtrl( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT | wxLC_SINGLE_SEL | wxLC_NO_HEADER );
    set_properties();
    do_layout();
    m_source->Bind( wxEVT_LIST_BEGIN_DRAG, &SortGroupByPage::OnBeginDrag, this );
}

SortGroupByPage::~SortGroupByPage()
{

}

void SortGroupByPage::set_properties()
{
    m_source->InsertColumn( 0, _( "" ), wxLIST_FORMAT_LEFT, wxLIST_AUTOSIZE );
    m_dest->InsertColumn( 0, _( "" ), wxLIST_FORMAT_LEFT, wxLIST_AUTOSIZE );
}

void SortGroupByPage::do_layout()
{
    auto sizer1 = new wxBoxSizer( wxVERTICAL );
    auto sizer2 = new wxBoxSizer( wxHORIZONTAL );
    sizer1->Add( m_label, 0, wxEXPAND, 0 );
    sizer1->Add( 5, 5, 0, wxEXPAND, 0 );
    sizer2->Add( m_source, 1, wxEXPAND, 0 );
    sizer2->Add( m_dest, 1, wxEXPAND, 0 );
    sizer1->Add( sizer2, 1, wxEXPAND, 0 );
    SetSizer( sizer1 );
}

wxListCtrl *SortGroupByPage::GetSourceList()
{
    return m_source;
}

wxListCtrl *SortGroupByPage::GetDestList()
{
    return m_dest;
}

void SortGroupByPage::OnBeginDrag(wxListEvent &event)
{
    int flags;
    const wxPoint& pt = event.m_pointDrag;
    wxListCtrl *source = dynamic_cast<wxListCtrl *>( event.GetEventObject() );
    m_item = source->GetItemText( source->HitTest( pt, flags ) );
    this->CaptureMouse();
}
